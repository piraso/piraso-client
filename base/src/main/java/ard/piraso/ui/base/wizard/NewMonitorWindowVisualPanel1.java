/*
 * Copyright (c) 2011. Piraso Alvin R. de Leon. All Rights Reserved.
 *
 * See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The Piraso licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package ard.piraso.ui.base.wizard;

import ard.piraso.ui.api.extension.WizardVisualPanel;
import ard.piraso.ui.base.model.NewContextMonitorModel;
import org.apache.commons.lang.StringUtils;
import org.openide.util.NbBundle;

public final class NewMonitorWindowVisualPanel1 extends WizardVisualPanel<NewContextMonitorModel> {
    
    /** Creates new form NewMonitorWindowVisualPanel1 */
    public NewMonitorWindowVisualPanel1() {
        initComponents();
    }
    
    @Override
    public String getName() {
        return NbBundle.getMessage(NewMonitorWindowVisualPanel1.class, "NewMonitorWindowVisualPanel1.step.name");
    }
    
    @Override
    public void initChangeEvents() {
        addChangeListener(cboHost);
        addChangeListener(txtOtherAddress);
        addChangeListener(rdoMyAddress);
        addChangeListener(rdoOtherAddress);
    }
    
    @Override
    public boolean isEntriesValid() {
        // check url logging value
        if(cboHost.getSelectedItem() == null ||
                StringUtils.isBlank(String.valueOf(cboHost.getSelectedItem()))) {
            return false;
        }

        // check remote address
        if(!rdoMyAddress.isSelected() && StringUtils.isBlank(txtOtherAddress.getText())) {
            return false;
        }

        return true;
    }
    
    @Override
    public void read(NewContextMonitorModel model) {
        if(model.getLoggingUrl() != null) {
            cboHost.setSelectedItem(model.getLoggingUrl());
        }
        
        if(model.getWatchedAddr() != null) {
            txtOtherAddress.setText(model.getWatchedAddr());
            rdoOtherAddress.setSelected(true);
        } else {
            rdoMyAddress.setSelected(true);
        }
    }
    
    @Override
    public void store(NewContextMonitorModel model) {
        model.setLoggingUrl(String.valueOf(cboHost.getSelectedItem()));
        
        if(rdoOtherAddress.isSelected()) {
            model.setWatchedAddr(txtOtherAddress.getText());
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        cboHost = new javax.swing.JComboBox();
        rdoMyAddress = new javax.swing.JRadioButton();
        rdoOtherAddress = new javax.swing.JRadioButton();
        txtOtherAddress = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        buttonGroup1.add(rdoMyAddress);
        buttonGroup1.add(rdoOtherAddress);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(NewMonitorWindowVisualPanel1.class, "NewMonitorWindowVisualPanel1.jLabel1.text")); // NOI18N

        cboHost.setEditable(true);

        rdoMyAddress.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(rdoMyAddress, org.openide.util.NbBundle.getMessage(NewMonitorWindowVisualPanel1.class, "NewMonitorWindowVisualPanel1.rdoMyAddress.text")); // NOI18N
        rdoMyAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoMyAddressActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(rdoOtherAddress, org.openide.util.NbBundle.getMessage(NewMonitorWindowVisualPanel1.class, "NewMonitorWindowVisualPanel1.rdoOtherAddress.text")); // NOI18N
        rdoOtherAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoOtherAddressActionPerformed(evt);
            }
        });

        txtOtherAddress.setText(org.openide.util.NbBundle.getMessage(NewMonitorWindowVisualPanel1.class, "NewMonitorWindowVisualPanel1.txtOtherAddress.text")); // NOI18N
        txtOtherAddress.setEnabled(false);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(NewMonitorWindowVisualPanel1.class, "NewMonitorWindowVisualPanel1.jLabel2.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboHost, 0, 398, Short.MAX_VALUE))
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rdoOtherAddress)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtOtherAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(rdoMyAddress))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 169, Short.MAX_VALUE)))
                .addGap(33, 33, 33))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cboHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdoMyAddress)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(rdoOtherAddress)
                    .addComponent(txtOtherAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(135, 135, 135))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void rdoOtherAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoOtherAddressActionPerformed
        refreshAddressSelection();
    }//GEN-LAST:event_rdoOtherAddressActionPerformed

    private void rdoMyAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoMyAddressActionPerformed
        refreshAddressSelection();
    }//GEN-LAST:event_rdoMyAddressActionPerformed

    private void refreshAddressSelection() {
        txtOtherAddress.setEnabled(rdoOtherAddress.isSelected());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.ButtonGroup buttonGroup1;
    protected javax.swing.JComboBox cboHost;
    protected javax.swing.JLabel jLabel1;
    protected javax.swing.JLabel jLabel2;
    protected javax.swing.JRadioButton rdoMyAddress;
    protected javax.swing.JRadioButton rdoOtherAddress;
    protected javax.swing.JTextField txtOtherAddress;
    // End of variables declaration//GEN-END:variables

}
